name: Deploy App

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
        default: "dev"
      apply:
        required: false
        type: boolean
        default: false
      site_domain:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      aws-bucket:
        required: true
        type: string
      s3_deploy_zipfile:
        required: true
        type: string
      aws_role:
        required: true
        type: string
      aws_role_apigateway:
        required: true
        type: string
      aws_certificate_arn:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  pre-checks:
    name: Code Pre-checks
    uses: ./.github/workflows/run-code-checks.yaml
    with:
      branch-name: ${{ inputs.environment }}

  create-lambda-deployment-package:
    name: Create Lambda Deployment Package
    runs-on: ubuntu-latest
    needs: pre-checks
    outputs:
      package_checksum: ${{ steps.package-checksum.outputs.package_checksum }}
    steps:
      - name: Checkout ${{ inputs.environment }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.environment }}
      - name: Build App
        run: make build
      - name: Get Hash
        id: package-checksum
        run: echo "package_checksum=$(openssl dgst -sha256 -binary function.zip | base64 -w 0)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        with:
          name: function.zip-artifact
          path: function.zip

  upload-deployment-package-to-S3:
    name: Upload Deployment Package to S3 Bucket
    runs-on: ubuntu-latest
    needs: create-lambda-deployment-package
    steps:
      - name: Checkout ${{ inputs.environment }} branch
        uses: actions/checkout@v4
        with:
          path: ${{ inputs.environment }}
      - uses: actions/download-artifact@v3
        with:
          name: function.zip-artifact
      - uses: hkusu/s3-upload-action@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}
          aws-bucket: ${{ inputs.aws-bucket }}
          file-path: "./function.zip"
          bucket-root: "/"
          destination-dir: "/${{ inputs.environment }}/artifacts"

  terraform-deploy:
    name: Terraform Deploy
    needs: [create-lambda-deployment-package, upload-deployment-package-to-S3]
    uses: ./.github/workflows/terraform.yaml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    with:
      apply: true
      environment: ${{ inputs.environment }}
      site_domain: ${{ inputs.site_domain }}
      s3_deploy_zipfile: ${{ inputs.s3_deploy_zipfile }}
      aws_role: ${{ inputs.aws_role }}
      aws_role_apigateway: ${{ inputs.aws_role_apigateway }}
      aws_certificate_arn: ${{ inputs.aws_certificate_arn }}
      source_code_hash: ${{ needs.create-lambda-deployment-package.outputs.package_checksum }}
